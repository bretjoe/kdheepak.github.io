{"pages":[{"url":"http://kdheepak.com/projects/ames-market-test-bed.html","text":"AMES is a Wholesale Power Market Test Bed. AMES stands for Agent-based Modeling of Electricity Systems. The AMES Market Package is an open source software implementation of the AMES Wholesale Power Market Test Bed in Java. The AMES Market Package version 2.06 was developed at Iowa State University, and is available for download here Invited IEEE PES-GM Panel Talks D. Krishnamurthy , Wanning Li. and L. Tesfatsion, \"A Small-Scale Test System for Wholesale Electric Power Market Operations Based on ISO-NE Data\", in Development of IEEE Test Systems for Economic Analysis (Panel Session), IEEE Power Energy Soc. Gen. Meet., Vancouver, British Columbia, Jul. 2013. [Co-presenter] A. G. Thomas, D.Krishnamurthy , and L. Tesfatsion, \"Multi-Agent System Capabilities of the AMES Wholesale Power Market Test Bed\", in Multi-Agent Systems Test Beds and Applications (Panel Session), IEEE Power Energy Soc. Gen. Meet., Van- couver, British Columbia, Jul. 2013. [Co-presenter] Acknowledgements Dr. Leigh Tesfatsion - Link","tags":"projects","title":"AMES Market Test Bed"},{"url":"http://kdheepak.com/blog/spotify-and-tmux.html","text":"Create a file named tmux-spotify-info and place it in a directory that in your $PATH . Add the following snippet of code into the file and make sure it is executable. #!/usr/bin/env osascript # Returns the current playing song in Spotify for OSX tell application \"Spotify\" if it is running then if player state is playing then set track_name to name of current track set artist_name to artist of current track \"#[fg=colour39,nobold]#[fg=colour16, bg=colour39, nobold] \" & artist_name & \" - \" & track_name & \" #[bg=colour39]\" end if end if end tell Add this to the end of ~/.tmux.conf # Bad Wolf by Steve Losh # Modified by Dheepak Krishnamurthy # ===================== set -g status-fg white set -g status-bg colour234 # set -g status-bg default #set for transparent background set -g window-status-activity-attr bold set -g pane-border-fg colour245 set -g pane-active-border-fg colour39 set -g message-fg colour16 set -g message-bg colour221 set -g message-attr bold # Custom status bar # Powerline set -g status-left-length 32 set -g status-right-length 150 set -g status-interval 5 # Lets add the current weather to our status bar—why? Well Why the french-toast not? set -g status-left '#[fg=colour16,bg=colour254,bold] #S #[fg=colour254,bg=colour238,nobold]#[fg=colour15,bg=colour238,bold] #(weathermajig boulder --short) #[fg=colour238,bg=colour234,nobold]' set -g status-right '%R #[fg=colour238,nobold]#[fg=colour254, bg=colour238] %d %b #(tmux-spotify-info)#[fg=colour254,nobold]#[fg=colour16,bg=colour254,bold] #h ' set -g window-status-format \"#[fg=white,bg=colour234] #I #W \" set -g window-status-current-format \"#[fg=colour234,bg=colour39]#[fg=colour16,bg=colour39,noreverse,bold] #I ❭ #W #[fg=colour39,bg=colour234,nobold]\" And your favourite song will be listed in your tmux powerline! You can change the colours by playing the values above.","tags":"blog","title":"Spotify and tmux"},{"url":"http://kdheepak.com/blog/change-path-inside-vim.html","text":"Save the following script in /usr/local/bin/cpvim #!/bin/zsh source ~/.zshrc >/dev/null 2> & 1 PATH = $VIM_PATH exec nvim \" $@ \" Add the following to your .zshrc alias vim=/usr/local/bin/cpvim","tags":"blog","title":"Change $PATH inside vim"},{"url":"http://kdheepak.com/blog/patched-fonts-madness.html","text":"Getting patched fonts for a powerline in the terminal can be quite an adventure. I almost gave up on it, but now that I've figured it out it seems extremely obvious. # pip install --user powerline-status # brew install fontforge --with-python git clone https://github.com/powerline/fonts.git cd fonts ./install.sh Most importantly, select the font with the word powerline in the name in the preferences option of your terminal.","tags":"blog","title":"Patched fonts madness"},{"url":"http://kdheepak.com/blog/uninstalling-and-re-installing-homebrew-on-osx.html","text":"Gist #!/bin/sh # Just copy and paste the lines below (all at once, it won't work line by line!) # MAKE SURE YOU ARE HAPPY WITH WHAT IT DOES FIRST! THERE IS NO WARRANTY! brew list > ~/brew_list.txt function abort { echo \" $1 \" exit 1 } set -e /usr/bin/which -s git || abort \"brew install git first!\" test -d /usr/local/.git || abort \"brew update first!\" cd ` brew --prefix ` git checkout master git ls-files -z | pbcopy rm -rf Cellar bin/brew prune pbpaste | xargs -0 rm rm -r Library/Homebrew Library/Aliases Library/Formula Library/Contributions test -d Library/LinkedKegs && rm -r Library/LinkedKegs rmdir -p bin Library share/man/man1 2> /dev/null rm -rf .git rm -rf ~/Library/Caches/Homebrew rm -rf ~/Library/Logs/Homebrew rm -rf /Library/Caches/Homebrew Set permission on Homebrew folder sudo chown -R $ USER /Library/Caches/Homebrew/","tags":"blog","title":"Uninstalling and Re-Installing Homebrew on OSX"},{"url":"http://kdheepak.com/blog/how-to-add-line-numbers-for-code-blocks-in-pelican.html","text":"Update : I've removed line numbers because it is selected along with the code if someone wants to copy. I'll post here if I find a better solution. I've found that line numbering with word wrap could only be achieved in Pelican by a certain set of steps. I've listed the CSS and the Plugin I've used to get that to work. Add the following lines in your theme.css /* For use with the code_line-number_word-wrap_switcher_jquery.js Pelican plugin */ code { overflow : auto ; /* This uses `white-space: pre-wrap` to get elements within <pre> tags to wrap. Python, for code chunks within three backticks (```), doesn't wordwrap code lines by default, because they're within <pre> tags, which don't wrap by default. See https://github.com/github/markup/issues/168 , which is specifically about this parsing issue, even though that link's discussion is talking about GitHub. */ white-space : pre - wrap ; /* css-3 */ white-space : - moz - pre - wrap ; /* Mozilla, since 1999 */ white-space : - pre - wrap ; /* Opera 4-6 */ white-space : - o - pre - wrap ; /* Opera 7 */ word - wrap : break - word ; /* Internet Explorer 5.5+ */ } /* Following http://bililite.com/blog/2012/08/05/line-numbering-in-pre-elements/, use CSS to add line numbers to all spans that have the class 'code-line' */ .highlight pre { counter-reset : linecounter ; padding-left : 2em ; } .highlight pre span .code-line { counter-increment : linecounter ; padding-left : 1em ; text-indent : -1em ; display : inline - block ; } .highlight pre span .code-line :before { content : counter ( linecounter ); padding-right : 1em ; display : inline - block ; color : grey ; text-align : right ; } Then, we turn off the default linenums in codehilite. Also add the following pelican-plugin. MD_EXTENSIONS = ['fenced_code', 'codehilite(css_class=highlight, linenums=False)', ] PLUGINS = ['better_codeblock_line_numbering']","tags":"blog","title":"How to add line numbers for code blocks in Pelican"},{"url":"http://kdheepak.com/blog/emacsclient-and-tmux-split-navigation.html","text":"I've described some of the scripts that I use regularly when using emacs in the terminal. I also using emacs with tmux, even though it seems like emacs itself could be tweaked to replace tmux. Currently, my tmux+zsh setup has been much more powerful that what emacs alone can provide. zsh did not play well, even with multiterm and I've had mixed results with getting ipython to work well inside emacs. I use the following set of lisps my .emacs to get seamless navigation between emacs splits and tmux panes. ;; Many thanks to the author of and contributors to the following posts: ;; https://gist.github.com/mislav/5189704 ;; http://robots.thoughtbot.com/post/53022241323/seamlessly-navigate-vim-and-tmux-splits ;; ;; TODO: Make a script that generates tmux and emacs code without duplication ;; ;; NOTE: My keybindings are not the default emacs ones, using windmove ;; Try to move direction, which is supplied as arg ;; If cannot move that direction, send a tmux command to do appropriate move (defun windmove-emacs-or-tmux(dir tmux-cmd) (interactive) (if (ignore-errors (funcall (intern (concat \"windmove-\" dir)))) nil ;; Moving within emacs (shell-command tmux-cmd)) ;; At edges, send command to tmux ) ;Move between windows with custom keybindings (global-set-key (kbd \"C-k\") '(lambda () (interactive) (windmove-emacs-or-tmux \"up\" \"tmux select-pane -U\"))) (global-set-key (kbd \"C-j\") '(lambda () (interactive) (windmove-emacs-or-tmux \"down\" \"tmux select-pane -D\"))) (global-set-key (kbd \"C-l\") '(lambda () (interactive) (windmove-emacs-or-tmux \"right\" \"tmux select-pane -R\"))) (global-set-key (kbd \"C-h\") '(lambda () (interactive) (windmove-emacs-or-tmux \"left\" \"tmux select-pane -L\"))) The following was added to .tmux.conf ## Smart pane switching with awareness of emacs splits. bind -n C-h run \"(tmux display-message -p '#{pane_current_command}' | grep -iqE '(&#94;|\\/)g?(view|emacs?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L\" bind -n C-j run \"(tmux display-message -p '#{pane_current_command}' | grep -iqE '(&#94;|\\/)g?(view|emacs?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D\" bind -n C-k run \"(tmux display-message -p '#{pane_current_command}' | grep -iqE '(&#94;|\\/)g?(view|emacs?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U\" bind -n C-l run \"(tmux display-message -p '#{pane_current_command}' | grep -iqE '(&#94;|\\/)g?(view|emacs?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R\" bind -n C-\\ run \"(tmux display-message -p '#{pane_current_command}' | grep -iqE '(&#94;|\\/)g?(view|emacs?)(diff)?$' && tmux send-keys 'C-\\\\') || tmux select-pane -l\"","tags":"blog","title":"Emacsclient and tmux split navigation"},{"url":"http://kdheepak.com/blog/emacs-workflow-using-emacs-in-the-terminal.html","text":"I use the command line a lot, frequently editing files locally or remotely. Up until now, I've been using vim with tmux and zsh . I've recently been experimenting with emacs and have been trying to get it to work well inplace of vim. I personally think the author of this post nailed it regarding emacs workflow. I've only made minor modifications to get it to suit my requirements. I've created a separate script called ess (emacsserverstart) added a & at the end of the emacs script to get it to run in the background. /usr/local/bin/ess #!/bin/zsh /Applications/Emacs.app/Contents/MacOS/Emacs & /usr/local/bin/emacs #!/bin/zsh /Applications/Emacs.app/Contents/MacOS/Emacs \" $@ \" I've found that when using emacsclient connecting to emacs --daemon renders certain things differently, as compared to opening emacs, starting a server and connecting to that instead. I also have (server-start) in my .emacs file. The following script connects a emacsclient to an already existing emacs server. If a server does not exist, it starts a daemon and then connects to it. This is done using the -a \"\" flag, which allows you to set an alternate editor. If no editor it set it defaults to running a daemon. It also shifts focus to the emacsclient after it opens. /usr/local/bin/ec #!/bin/zsh # This script starts emacs daemon if it is not running, opens whatever file # you pass in and changes the focus to emacs. Without any arguments, it just # opens the current buffer or *scratch* if nothing else is open. The following # example will open ~/.bashrc # ec ~/.bashrc # You can also pass it multiple files, it will open them all. Unbury-buffer # will cycle through those files in order # The compliment to the script is et, which opens emacs in the terminal # attached to a daemon # If you want to execute elisp, pass in -e whatever. # You may also want to stop the output from returning to the terminal, like # ec -e \"(message \\\"Hello\\\")\" > /dev/null # emacsclient options for reference # -a \"\" starts emacs daemon and reattaches # -c creates a new frame # -n returns control back to the terminal # -e eval the script # Number of current visible frames, # Emacs daemon always has a visible frame called F1 visible_frames () { emacsclient -a \"\" -e '(length (visible-frame-list))' } change_focus () { emacsclient -n -e \"(select-frame-set-input-focus (selected-frame))\" > /dev/null } # try switching to the frame incase it is just minimized # will start a server if not running test \" $( visible_frames ) \" -eq \"1\" && change_focus if [ \" $( visible_frames ) \" -lt \"2\" ] ; then # need to create a frame # -c $@ with no args just opens the scratch buffer emacsclient -n -c \" $@ \" && change_focus else # there is already a visible frame besides the daemon, so change_focus # -n $@ errors if there are no args test \" $#\" -ne \" 0 \" && emacsclient -n \" $@ \" fi This script opens an emacsclient in the terminal and connects it to a running server. The -t flag opens it in the terminal. /usr/local/bin/et #!/bin/zsh # Makes sure emacs daemon is running and opens the file in Emacs in # the terminal. # If you want to execute elisp, use -e whatever, like so # et -e \"(message \\\"Word up\\\")\" # You may want to redirect that to /dev/null if you don't want the # return to printed on the terminal. Also, just echoing a message # may not be visible if Emacs then gives you a message about what # to do when do with the frame # The compliment to this script is ec # Emacsclient option reference # -a \"\" starts emacs daemon and reattaches # -t starts in terminal, since I won't be using the gui # can also pass in -n if you want to have the shell return right away exec emacsclient -a \"\" -t \" $@ \" This following scripts stops the emacs server. /usr/local/bin/es #!/bin/zsh # simple script to shutdown the running Emacs daemon # emacsclient options for reference # -a Alternate editor, runs bin/false in this case # -e eval the script # If the server-process is bound and the server is in a good state, then kill # the server server_ok () { emacsclient -a \"false\" -e \"(boundp 'server-process)\" } if [ \"t\" == \" $( server_ok ) \" ] ; then echo \"Shutting down Emacs server\" # wasn't removing emacs from ALT-TAB on mac # emacsclient -e \"(server-force-delete)\" emacsclient -e '(spacemacs/kill-emacs)' else echo \"Emacs server not running\" fi","tags":"blog","title":"Emacs workflow - Using Emacs in the terminal"},{"url":"http://kdheepak.com/blog/emacs-tips-close-compilation-buffer-if-successful.html","text":"When I work with markdown, \\(\\LaTeX\\) or code that requires compiling, I like to check often if everything looks okay. Emacs has a good description of everything you can do with the CompileCommand . However, it does not have a description for auto-closing the buffer if the compilation was successful. StackOverflow to the rescue! ; from enberg on #emacs ( setq compilation-finish-function ( lambda ( buf str ) ( if ( null ( string-match \".*exited abnormally.*\" str )) ;;no errors, make the compilation window go away in a few seconds ( progn ( run-at-time \"1 sec\" nil 'delete-windows-on ( get-buffer-create \"*compilation*\" )) ( message \"No Compilation Errors!\" ))))) Insert the above code into your .emacs file. You can change the time you wish the buffer to be available by changing the \"1 sec\" in the above code if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); var location_protocol = (false) ? 'https' : document.location.protocol; if (location_protocol !== 'http' && location_protocol !== 'https') location_protocol = 'https:'; mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('default' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_default');\" + \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"blog","title":"Emacs Tips - Close compilation buffer"},{"url":"http://kdheepak.com/blog/create-emacsclientapp-using-applescript.html","text":"Open Automator and go to File->New. Click on Application. Then search for 'Run AppleScript' and drag it to the window on the right. Copy paste the following gist to the window Save the application in /Applications or /Users/$USER/Applications. Now you can quickly open emacsclient from Alfred. Also check out Alfred workflows in the link below https://github.com/franzheidl/alfred-workflows#open-with-emacs","tags":"blog","title":"Create Emacsclient.app using AppleScript"},{"url":"http://kdheepak.com/blog/better-git-log-with-git-ls.html","text":"Add the following command to ~/.gitconfig [alias] ls = log --graph --abbrev-commit --decorate --color=always --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) - %C(dim red)%an%C(reset)%C(bold yellow)%d%C(reset)' --all Here is an example of what the command output looks like.","tags":"blog","title":"Better git log with git ls"},{"url":"http://kdheepak.com/blog/vim-tmux-zsh.html","text":"I've not found a greater combination of tools than vim, tmux and zsh. I've detailed below some of the configuration to get it working the way I want it to. tmux # Change prefix key to ` unbind C-b set -g prefix ` bind-key ` send-prefix bind-key C-a set-option -g prefix C-a bind-key C-b set-option -g prefix ` # we might need ` at some point, allow switching bind-key C-a set-option -g prefix C-a bind-key C-b set-option -g prefix ` setw -g monitor-activity on set -g visual-activity on set-window-option -g window-status-current-bg yellow set -g mouse-resize-pane on set-option -g mouse-select-pane on set-option -g mouse-select-window on set-window-option -g mode-mouse on setw -g mode-mouse on set -g terminal-overrides 'xterm*:smcup@:rmcup@' # set-option -g default-command \"reattach-to-user-namespace -l zsh\" # Use vim keybindings in copy mode setw -g mode-keys vi bind-key -t vi-copy v begin-selection bind-key -t vi-copy y copy-pipe \"reattach-to-user-namespace pbcopy\" unbind -t vi-copy Enter bind-key -t vi-copy Enter copy-pipe \"reattach-to-user-namespace pbcopy\" ## Keep your finger on ctrl, or don't bind-key &#94;D detach-client ## Pane resize in all four directions using vi bindings. ## Can use these raw but I map them to shift-ctrl-<h,j,k,l> in iTerm. bind -r H resize-pane -L 5 bind -r J resize-pane -D 5 bind -r K resize-pane -U 5 bind -r L resize-pane -R 5 ## Smart pane switching with awareness of vim splits. ## Source: https://github.com/christoomey/vim-tmux-navigator bind -n C-h run \"(tmux display-message -p ' #{ pane_current_command } ' | grep -iqE '(&#94;|\\/)g?(view|vim?)(diff)? $ ' && tmux send-keys C-h) || tmux select-pane -L\" bind -n C-j run \"(tmux display-message -p ' #{ pane_current_command } ' | grep -iqE '(&#94;|\\/)g?(view|vim?)(diff)? $ ' && tmux send-keys C-j) || tmux select-pane -D\" bind -n C-k run \"(tmux display-message -p ' #{ pane_current_command } ' | grep -iqE '(&#94;|\\/)g?(view|vim?)(diff)? $ ' && tmux send-keys C-k) || tmux select-pane -U\" bind -n C-l run \"(tmux display-message -p ' #{ pane_current_command } ' | grep -iqE '(&#94;|\\/)g?(view|vim?)(diff)? $ ' && tmux send-keys C-l) || tmux select-pane -R\" bind -n C-\\ run \"(tmux display-message -p ' #{ pane_current_command } ' | grep -iqE '(&#94;|\\/)g?(view|vim?)(diff)? $ ' && tmux send-keys 'C-\\\\') || tmux select-pane -l\" set -g default-terminal \"xterm\" ## No escape time for vi mode set -sg escape-time 0 ## Screen like binding for last window unbind l bind C-a last-window ## Bigger history set -g history-limit 10000 ## New windows/pane in $PWD bind c new-window -c \" #{ pane_current_path } \" ## force a reload of the config file unbind r bind r source-file ~/.tmux.conf \\; display \"Reloaded!\" ## Easy bindings for split unbind % bind | split-window -h -c \" #{ pane_current_path } \" bind - split-window -v -c \" #{ pane_current_path } \" # bind y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy ' # bind C-y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy ' # start window numbering at 1 set -g base-index 1 # start pane numbering at 1 set -g pane-base-index 1 bind-key -n C-S-Left swap-window -t -1 bind-key -n C-S-Right swap-window -t +1 ## Here is a jewel of a bind which does the task of flipping the orientation of the current pane with the pane before it (in the ordering) -- I had a SO question on this and nobody answered. bind -n M-f move-pane -t '.-' bind M-f move-pane -t '.-' bind -n M-r move-pane -h -t '.-' bind M-r move-pane -h -t '.-' ## # Join windows: <prefix> s, <prefix> j bind-key j command-prompt -p \"join pane from:\" \"join-pane -s '%%'\" bind-key s command-prompt -p \"send pane to:\" \"join-pane -t '%%'\" zsh # Path to your oh-my-zsh installation. export ZSH=/Users/dheepakkrishnamurthy/.oh-my-zsh ZSH_THEME=\"rawsyntax\" alias vim='mvim -v' export TERM=xterm-256color source $ ZSH /oh-my-zsh.sh vim Plugin 'altercation/vim-colors-solarized' Plugin 'bling/vim-airline' Plugin 'christoomey/vim-tmux-navigator' Plugin 'fholgado/minibufexpl.vim' Plugin 'honza/vim-snippets' Plugin 'jeffkreeftmeijer/vim-numbertoggle' Plugin 'morhetz/gruvbox' Plugin 'plasticboy/vim-markdown' Plugin 'scrooloose/nerdcommenter' Plugin 'scrooloose/nerdtree' Plugin 'searchcomplete' Plugin 'sjl/gundo.vim' Plugin 'tomasr/molokai' Plugin 'tpope/vim-repeat' Plugin 'tpope/vim-surround'","tags":"blog","title":"Vim, tmux and zsh - the productivity trio"},{"url":"http://kdheepak.com/blog/beginners-guide-to-getting-started-with-vim.html","text":"When I first started using vim, I found it frustrating and difficult to get anything done. I now realize that there were a list of things I had to do to understand how to use vim. Learning vim can be an extremely gratifying experience, but it is probably unlike anything you have seen before. So having a guide to getting started may be useful. I haven't been using vim for very long, so I'm by no means an expert. But since I'm starting out, I figured it would be useful for beginners if I put down what I think is the order in which you should approach vim. Spend half an hour (maybe over lunch) using vimtutor Type vimtutor in a command line window and follow instructions Stay in normal mode often. If you want to make a change, enter insert mode, edit text and return to normal mode Speed up your key repeat Force yourself to use hjkl to navigate by disabling arrow keys Understand how to use macros q : Start a macro [REG] : Assign a macro to a register, e.g. a . Starts recording a macro [keystrokes] : Perform a set of keystrokes, e.g. ciwhelloESC q : End recording a macro @[REG] : Play a macro from cursor current position @@ : Play last played macro Craft your lightsaber - Find other people's dotfiles and build your .vimrc. Don't add anything in your .vimrc that you don't understand. Find plugins to boost your productivity (e.g. NERDTree, ). Use a plugin manager. Watch other people use vim on vimcasts Change CAPSLOCK to ESC","tags":"blog","title":"Beginners guide to getting started with Vim"},{"url":"http://kdheepak.com/blog/active-reactive-and-apparent-power.html","text":"This post covers the basics of the types of Power in power systems. This post was generated from an iPython Notebook In [1]: Collapse Code from __future__ import division % matplotlib inline import matplotlib.pyplot as plt import numpy as np Introduction to basic concepts $V$ and $I$ are used to indicate phasor representations of sinusoidal voltages and currents. $E$ is used to represent generated voltage or electromotive force (emf). $V$ is often used to measure a potential difference between two points. $v$ is used to represent the instantaneous voltage between two points. Let voltage be defined as the following : $v = 155.563491861 \\cos(\\omega t + \\phi)$ $i = 7.07106781187 \\cos\\omega t$ Let us plot this and see what it looks like. In [2]: Expand Code f0 = 60 # Hz (frequency) phi = - np . pi / 2 # phase shift Av = 155.563491861 # voltage peak Ai = 7.07106781187 # current peak fs = 4000 # steps t = np . arange ( 0.000 , 6 / f0 , 1.0 / fs ) # plot from 0 to .02 secs v = Av * np . cos ( 2 * np . pi * f0 * t + phi ) i = Ai * np . cos ( 2 * np . pi * f0 * t ) fig , ax = plt . subplots ( 1 , 1 , figsize = ( 16 , 10 )) ax . plot ( t , v , label = 'Voltage' ) ax . plot ( t , i , label = 'Current' ) ax . axis ([ 0 , 2 / f0 , - 200 , 200 ]) ax . legend (); In [3]: Expand Code def rms ( x ): return np . sqrt ( np . mean ( x ** 2 )) We can calculate the maximum, minimum and the RMS value as follows In [4]: Expand Code print 'Maximum' , max ( v ) print 'Minimum' , min ( v ) print 'RMS' , rms ( v ) print 'Ratio max/rms' , max ( v ) / rms ( v ) try : np . testing . assert_approx_equal ( np . sqrt ( 2 ), max ( v ) / rms ( v )) except : print 'Numbers not equal' else : print 'Maximum value = √2 x RMS value' Maximum 155.563491861 Minimum -155.563491861 RMS 110.0 Ratio max/rms 1.41421356237 Maximum value = √2 x RMS value $|V|$ is used to represent magnitude of the phasors. $|V| = 110 = \\frac{155.5634}{\\sqrt{2}} $ The RMS value of $v$ is what is read by a voltmeter Expression for power Let voltage and current be expressed by $v_{an} = V_{max} \\cos(\\omega t + \\theta)$ $i_{an} = I_{max} \\cos\\omega t $ Instantaneous power is calculated by $p_{a} = v_{an} \\times i_{an}$. If we plot the above equations, assuming $\\theta = -\\frac{\\pi}{6}$, we get the following. In [5]: Expand Code f0 = 60 # Hz (frequency) phi = - np . pi / 6 # phase shift Av = 10 * np . sqrt ( 2 ) # voltage peak Ai = 5 * np . sqrt ( 2 ) # current peak fs = 4000 # steps t = np . arange ( 0.000 , 1 / f0 , 1.0 / fs ) # plot from 0 to .02 secs v = Av * np . cos ( 2 * np . pi * f0 * t + phi ) i = Ai * np . cos ( 2 * np . pi * f0 * t ) fig , axs = plt . subplots ( 2 , 1 , figsize = ( 16 , 10 )) ax1 = axs [ 0 ] ax1 . axhline ( linewidth = 0.25 , color = 'black' ) ax1 . axvline ( linewidth = 0.25 , color = 'black' ) ax1 . plot ( t , v , label = 'Voltage in phase A' ) ax1 . plot ( t , i , label = 'Current in phase A' ) ax1 . set_ylabel ( 'Voltage and Current' ) ax1 . axis ([ 0 , 1 / f0 , - 20 , 20 ]); ax1 . legend () ax2 = axs [ 1 ] ax2 . axhline ( linewidth = 0.25 , color = 'black' ) ax2 . axvline ( linewidth = 0.25 , color = 'black' ) ax2 . plot ( t , v * i , label = 'Power in phase A' , color = 'g' ) ax2 . set_ylabel ( 'Power' ) # for tl in ax2.get_yticklabels(): # tl.set_color('g') ax2 . legend () ax2 . axis ([ 0 , 1 / f0 , - 120 , 120 ]); We can decompose the instantaneous power following the steps below. $v_{an} = V_{max} \\cos(\\omega t + \\theta)$ $i_{an} = I_{max} \\cos\\omega t $ $p = v_{an} \\times i_{an}$ $p = V_{max} \\cos(\\omega t + \\theta) \\times I_{max} \\cos\\omega t $ $p = V_{max}I_{max} \\cos(\\omega t + \\theta) \\times \\cos\\omega t $ We know that, $2\\cos \\theta \\cos \\varphi = {{\\cos(\\theta - \\varphi) + \\cos(\\theta + \\varphi)}}$ $p = V_{max}I_{max} \\cos(\\omega t + \\theta) \\cos\\omega t$ $p = \\frac{V_{max}I_{max}}{2}({{\\cos(\\omega t + \\theta - \\omega t) + \\cos(\\omega t + \\theta + \\omega t)}})$ $p = \\frac{V_{max}I_{max}}{2}({{\\cos\\theta + \\cos(2\\omega t + \\theta )}})$ The second $\\cos$ term is of the following form, $\\cos(\\alpha \\pm \\beta) = \\cos \\alpha \\cos \\beta \\mp \\sin \\alpha \\sin \\beta\\,$ $p = \\frac{V_{max}I_{max}}{2}({{\\cos\\theta + \\cos 2\\omega t \\cos \\theta - \\sin 2\\omega t \\sin \\theta}})$ $p = \\frac{V_{max}I_{max}}{2}({{\\cos\\theta (1 + \\cos 2\\omega t) - \\sin 2\\omega t \\sin \\theta}})$ $p = \\frac{V_{max}I_{max}}{2} \\cos\\theta (1 + \\cos 2\\omega t) - \\frac{V_{max}I_{max}}{2} \\sin 2\\omega t \\sin \\theta $ $\\theta$ is the phase angle of one of the phasors. In our case, $\\theta$ is the phase angle of Voltage, when the angle of Current is 0 Assuming $\\theta = -\\theta$, $\\cos(\\theta) = \\cos(-\\theta) $ $\\sin(\\theta) = - \\sin(-\\theta) $ Hence, $p = \\frac{V_{max}I_{max}}{2} \\cos\\theta (1 + \\cos 2\\omega t) + \\frac{V_{max}I_{max}}{2} \\sin 2\\omega t \\sin \\theta $ We see that the sign of the first term remains unaffected by the sign of $\\theta$ Let us plot the two parts of this equation. In [6]: Expand Code f0 = 60 # Hz (frequency) phi = - np . pi / 3 # phase shift Av = 110 * np . sqrt ( 2 ) # voltage peak Ai = 5 * np . sqrt ( 2 ) # current peak fs = 4000 # steps t = np . arange ( 0.000 , 1 / f0 , 1.0 / fs ) # plot from 0 to .02 secs v = Av * np . cos ( 2 * np . pi * f0 * t + phi ) i = Ai * np . cos ( 2 * np . pi * f0 * t ) fig , axs = plt . subplots ( 1 , 1 , figsize = ( 16 , 5 )) # ax1 = axs[0] # ax1.axhline(linewidth=0.25, color='black') # ax1.axvline(linewidth=0.25, color='black') # ax1.plot(t, v, label = 'Voltage in phase A') # ax1.plot(t, i, label = 'Current in phase A') # ax1.set_ylabel('Voltage and Current') # ax1.axis([0, 1/f0, -200, 200]); # ax1.legend(loc='lower left') ax2 = axs ax2 . axhline ( linewidth = 0.25 , color = 'black' ) ax2 . axvline ( linewidth = 0.25 , color = 'black' ) #$p = \\frac{V_{max}I_{max}}{2} \\cos\\theta (1 + \\cos 2\\omega t) # + \\frac{V_{max}I_{max}}{2} \\sin 2\\omega t \\sin \\theta $ p_R = Av * Ai / 2 * ( np . cos ( phi ) * ( 1 + np . cos ( 2 * 2 * np . pi * f0 * t ))) p_X = Av * Ai / 2 * ( np . sin ( phi ) * ( np . sin ( 2 * 2 * np . pi * f0 * t ))) ax2 . plot ( t , p_R , label = 'Instantaneous Active Power in phase A' , linestyle = '--' , color = 'b' ) ax2 . plot ( t , p_X , label = 'Instantaneous Reactive Power in phase A' , linestyle = '-.' , color = 'r' ) #ax2.plot(t, v*i, label = 'Power in phase A', color='g') ax2 . plot ( t , p_R + p_X , label = 'Instantaneous Power in phase A' , color = 'g' ) ax2 . set_ylabel ( 'Power' ) ax2 . legend ( loc = 'lower left' ) ax2 . axis ([ 0 , 1 / f0 , - 1500 , 1500 ]); The blue line (active power) is always positve and has an average value of $\\frac{V_{max}I_{max}}{2}\\cos\\theta$. If we use RMS values, we get $P = \\frac{V_{max}}{\\sqrt{2}} \\frac{I_{max}}{\\sqrt{2}} \\cos\\theta$ $P = |V||I|\\cos\\theta$ The average value of the red line (reactive power) is equal to zero. The maximum value of the instantaneous reactive power is $\\frac{V_{max}I_{max}}{2} \\sin \\theta $ Or, $Q = |V||I|\\sin\\theta$ So why is it called real power? In [7]: Expand Code import SchemDraw as schem import SchemDraw.elements as e d = schem . Drawing () V1 = d . add ( e . SOURCE_SIN , label = '$V_{a}$' ) L1 = d . add ( e . LINE , d = 'right' , label = '$I_{a}$' ) d . push () R = d . add ( e . RES , d = 'down' , botlabel = '$R$' ) d . pop () d . add ( e . LINE , d = 'right' ) d . add ( e . INDUCTOR2 , d = 'down' , botlabel = '$L$' ) d . add ( e . LINE , to = V1 . start ) d . add ( e . GND ) d . draw () In [8]: Expand Code fig , ax = plt . subplots ( 1 , 1 , figsize = ( 4 , 4 )) soa = np . array ([[ 0 , 0 , 0 , 5 ],[ 0 , 0 , 0 , 10 ],[ 0 , 0 , 5 , 0 ],[ 0 , 0 , 5 , 5 ]]) X , Y , U , V = zip ( * soa ) ax = plt . gca () ax . quiver ( X , Y , U , V , angles = 'xy' , scale_units = 'xy' , scale = 1 ) ax . set_xlim ([ - 1 , 10 ]) ax . set_ylim ([ - 1 , 10 ]) ax . text ( 5 , 0 , r'$I_{X}$' ) ax . text ( 0 , 5 , r'$I_{R}$' ) ax . text ( 5 , 5 , r'$I_{an}$' ) ax . text ( 0 , 10 , r'$V_{an}$' ) ax . text ( 0.25 , 1 , r'$\\theta$' ) ax . axis ( 'off' ); We know that $\\theta$ is the phase difference between the Voltage and Current. $p = \\frac{V_{max}I_{max}}{2} \\cos\\theta (1 + \\cos 2\\omega t) + \\frac{V_{max}I_{max}}{2} \\sin 2\\omega t \\sin \\theta $ The first term can be rewritten as $\\frac{V_{max}I_{max}}{2} \\cos\\theta (1 + \\cos 2\\omega t)$ $V_{max}I_{max} \\cos\\theta \\cos&#94;2 \\omega t$ $V_{max}\\cos \\omega t \\times I_{max}\\cos\\theta\\cos \\omega t$ Similarly the second term can be rewritten as $V_{max}\\cos \\omega t \\times I_{max}\\sin \\omega t \\sin\\theta$ From the above figure we can see that power can be written as $p_{active} = v_{a} \\times i_{R}$ $p_{reactive} = v_{a} \\times i_{X}$ Special cases $P$ or active power or real power is the power that is dissipated in the resistor, in the form of heat energy. $Q$ or reactive power is the power that oscillates between the source and inductor or the capacitor. And $\\theta$ is determined by the nature of the impedance. Let's look at three cases Case 1 : $\\theta$ is zero When we assume $\\theta$ is zero, the load is purely resistive In [9]: Expand Code f0 = 60 # Hz (frequency) phi = 0 # phase shift Av = 110 * np . sqrt ( 2 ) # voltage peak Ai = 5 * np . sqrt ( 2 ) # current peak fs = 4000 # steps t = np . arange ( 0.000 , 1 / f0 , 1.0 / fs ) # plot from 0 to .02 secs v = Av * np . cos ( 2 * np . pi * f0 * t + phi ) i = Ai * np . cos ( 2 * np . pi * f0 * t ) fig , axs = plt . subplots ( 2 , 1 , figsize = ( 16 , 10 )) ax1 = axs [ 0 ] ax1 . axhline ( linewidth = 0.25 , color = 'black' ) ax1 . axvline ( linewidth = 0.25 , color = 'black' ) ax1 . plot ( t , v , label = 'Voltage in phase A' ) ax1 . plot ( t , i , label = 'Current in phase A' ) ax1 . set_ylabel ( 'Voltage and Current' ) ax1 . axis ([ 0 , 1 / f0 , - 200 , 200 ]); ax1 . legend ( loc = 'lower left' ) ax2 = axs [ 1 ] ax2 . axhline ( linewidth = 0.25 , color = 'black' ) ax2 . axvline ( linewidth = 0.25 , color = 'black' ) #$p = \\frac{V_{max}I_{max}}{2} \\cos\\theta (1 + \\cos 2\\omega t) # + \\frac{V_{max}I_{max}}{2} \\sin 2\\omega t \\sin \\theta $ p_R = Av * Ai / 2 * ( np . cos ( phi ) * ( 1 + np . cos ( 2 * 2 * np . pi * f0 * t ))) p_X = Av * Ai / 2 * ( np . sin ( phi ) * ( np . sin ( 2 * 2 * np . pi * f0 * t ))) ax2 . plot ( t , p_R , label = 'Instantaneous Active Power in phase A' , linestyle = '--' , color = 'b' ) ax2 . plot ( t , p_X , label = 'Instantaneous Reactive Power in phase A' , linestyle = '-.' , color = 'r' ) #ax2.plot(t, v*i, label = 'Power in phase A', color='g') ax2 . plot ( t , p_R + p_X , label = 'Instantaneous Power in phase A' , color = 'g' ) ax2 . set_ylabel ( 'Power' ) ax2 . legend ( loc = 'lower left' ) ax2 . axis ([ 0 , 1 / f0 , - 1500 , 1500 ]); The Instantaneous power in the phase is equal to the active power. Case 2 : $\\theta$ is 90 When $\\theta$ is 90, the load is purely inductive In [10]: Expand Code f0 = 60 # Hz (frequency) phi = - np . pi / 2 # phase shift Av = 110 * np . sqrt ( 2 ) # voltage peak Ai = 5 * np . sqrt ( 2 ) # current peak fs = 4000 # steps t = np . arange ( 0.000 , 1 / f0 , 1.0 / fs ) # plot from 0 to .02 secs v = Av * np . cos ( 2 * np . pi * f0 * t + phi ) i = Ai * np . cos ( 2 * np . pi * f0 * t ) fig , axs = plt . subplots ( 2 , 1 , figsize = ( 16 , 10 )) ax1 = axs [ 0 ] ax1 . axhline ( linewidth = 0.25 , color = 'black' ) ax1 . axvline ( linewidth = 0.25 , color = 'black' ) ax1 . plot ( t , v , label = 'Voltage in phase A' ) ax1 . plot ( t , i , label = 'Current in phase A' ) ax1 . set_ylabel ( 'Voltage and Current' ) ax1 . axis ([ 0 , 1 / f0 , - 200 , 200 ]); ax1 . legend ( loc = 'upper left' ) ax2 = axs [ 1 ] ax2 . axhline ( linewidth = 0.25 , color = 'black' ) ax2 . axvline ( linewidth = 0.25 , color = 'black' ) #$p = \\frac{V_{max}I_{max}}{2} \\cos\\theta (1 + \\cos 2\\omega t) # + \\frac{V_{max}I_{max}}{2} \\sin 2\\omega t \\sin \\theta $ p_R = Av * Ai / 2 * ( np . cos ( phi ) * ( 1 + np . cos ( 2 * 2 * np . pi * f0 * t ))) p_X = Av * Ai / 2 * ( np . sin ( phi ) * ( np . sin ( 2 * 2 * np . pi * f0 * t ))) ax2 . plot ( t , p_R , label = 'Instantaneous Active Power in phase A' , linestyle = '--' , color = 'b' ) ax2 . plot ( t , p_X , label = 'Instantaneous Reactive Power in phase A' , linestyle = '-.' , color = 'r' ) #ax2.plot(t, v*i, label = 'Power in phase A', color='g') ax2 . plot ( t , p_R + p_X , label = 'Instantaneous Power in phase A' , color = 'g' ) ax2 . set_ylabel ( 'Power' ) ax2 . legend ( loc = 'upper left' ) ax2 . axis ([ 0 , 1 / f0 , - 1500 , 1500 ]); The Instantaneous power in the phase is equal to the reactive power. The power oscillates between the source and the inductive circuit. Case 3 : $\\theta$ is -90 When $\\theta$ is -90, the load is purely capacitive In [11]: Expand Code f0 = 60 # Hz (frequency) phi = - np . pi / 2 # phase shift Av = 110 * np . sqrt ( 2 ) # voltage peak Ai = 5 * np . sqrt ( 2 ) # current peak fs = 4000 # steps t = np . arange ( 0.000 , 1 / f0 , 1.0 / fs ) # plot from 0 to .02 secs v = Av * np . cos ( 2 * np . pi * f0 * t + phi ) i = Ai * np . cos ( 2 * np . pi * f0 * t ) fig , axs = plt . subplots ( 2 , 1 , figsize = ( 16 , 10 )) ax1 = axs [ 0 ] ax1 . axhline ( linewidth = 0.25 , color = 'black' ) ax1 . axvline ( linewidth = 0.25 , color = 'black' ) ax1 . plot ( t , v , label = 'Voltage in phase A' ) ax1 . plot ( t , i , label = 'Current in phase A' ) ax1 . set_ylabel ( 'Voltage and Current' ) ax1 . axis ([ 0 , 1 / f0 , - 200 , 200 ]); ax1 . legend ( loc = 'upper left' ) ax2 = axs [ 1 ] ax2 . axhline ( linewidth = 0.25 , color = 'black' ) ax2 . axvline ( linewidth = 0.25 , color = 'black' ) #$p = \\frac{V_{max}I_{max}}{2} \\cos\\theta (1 + \\cos 2\\omega t) # + \\frac{V_{max}I_{max}}{2} \\sin 2\\omega t \\sin \\theta $ p_R = Av * Ai / 2 * ( np . cos ( phi ) * ( 1 + np . cos ( 2 * 2 * np . pi * f0 * t ))) p_X = Av * Ai / 2 * ( np . sin ( phi ) * ( np . sin ( 2 * 2 * np . pi * f0 * t ))) ax2 . plot ( t , p_R , label = 'Instantaneous Active Power in phase A' , linestyle = '--' , color = 'b' ) ax2 . plot ( t , p_X , label = 'Instantaneous Reactive Power in phase A' , linestyle = '-.' , color = 'r' ) #ax2.plot(t, v*i, label = 'Power in phase A', color='g') ax2 . plot ( t , p_R + p_X , label = 'Instantaneous Power in phase A' , color = 'g' ) ax2 . set_ylabel ( 'Power' ) ax2 . legend ( loc = 'upper left' ) ax2 . axis ([ 0 , 1 / f0 , - 1500 , 1500 ]); In a purely capacitive circuit, power oscillates between the source and electric field associated with the capacitor. Expression for complex power We know from Euler's identity that, for any real number x $e&#94;{jx} = \\cos x + j\\sin x$ This means, we can write the above equations as : $\\cos\\theta = \\operatorname{Re}\\{ e&#94;{j \\theta} \\} $ $v = 155.563491861 \\cos(\\omega t + \\theta)$ $v = 110 \\operatorname{Re}\\{ \\sqrt{2} e&#94;{j (\\omega t + \\theta)}\\}$ $v = 110 \\operatorname{Re}\\{ \\sqrt{2} e&#94;{ j\\theta} e&#94;{j \\omega t} \\}$ Similarly, $i = 5 \\operatorname{Re}\\{ \\sqrt{2} e&#94;{j \\omega t} \\}$ Hence $V$ can be written as, $V = |V| \\angle \\theta_{v} $ $I = |I| \\angle \\theta_{i} $ $VI&#94;* = |V||I|\\angle \\theta_{v} - \\theta_{i}$","tags":"blog","title":"Active, Reactive and Apparent Power"},{"url":"http://kdheepak.com/blog/how-to-set-up-a-pelican-blog-with-github-pages.html","text":"Markdown Static pages Enter Github pages and Pelican Install required packages Create a Github account and a User or Project page Create a directory for your website Run Pelican quickstart Content of your blog Push your content to Github I've been quite vocal about the benefits of blogging using Markdown, and using a static page generator instead of the conventional CMS. But a lot of people I've spoken to have expressed their doubts about the simplicity of the process. I figured if I could fit it in one blog post I could claim it were simple, right? Markdown Advantages Easy to learn - It has almost no syntax. You can learn how to format like a pro in half an hour. Fast - You don't have to deal with HTML tags or WYSIWYG editors. Platform independent - You can edit your blog posts from anywhere, be it on your PC, tablet or mobile device. You can even use your favourite text editor. (which is obviously VIM, right?) Markdown handles all of the following beautifully: lists links headers blockquotes bold and emphasized text blockquotes code blocks This is what this post looks like in Markdown. It really is that simple. Static pages Advantages Fast - It loads extremely quickly. Portable - You can easily move from a server space and deploy it elsewhere. Cheaper - It is cost effective for a small website / personal blogs. Disadvantages Typically required web development experience to make changes to website. Complicated and a lot of work when you have a lot of pages e.g. a personal blog. Enter Github pages and Pelican Github pages takes away from all the disadvantages of static pages, and adds a few pros as well. Version control was a big plus for me. And static site generators like Jekyll and Pelican make it extremely easy to create web content without any actual web development. I choose Pelican because it was Python based, and it seemed to have a good selection of themes. Install required packages pip install pelican pip install markdown pip install ghp-import ghp-import is a cli that allows you to easily push your changes to your github repository These are optional packages to install that may come in handy later pip install Pillow beautifulsoup4 cssmin cssprefixer cssutils pretty six smartypants typogrify webassets Create a Github account and a User or Project page Github pages has instructions on how to create a User or Project page, and will in fact walk you through the process. If you create a User page, your website will be live at $GHUSERNAME .github.io and a Project page will go up at $GHUSERNAME .github.io/ $PROJECTNAME . The rest of this blog assumes you want to create a User page. Create a directory for your website Assuming $GHUSERNAME is your github username, run the following commands. You can rename the 'website' folder to anything you want. git clone https://github.com/ $ GHUSERNAME / $ GHUSERNAME . github . io / website cd website Run Pelican quickstart pelican-quickstart This is what you might get. Answer all the questions ➜ website pelican-quickstart Welcome to pelican-quickstart v3.5.0. This script will help you create a new Pelican-based website. Please answer the following questions so this script can generate the files needed by Pelican. > Where do you want to create your new web site? [.] > What will be the title of this web site? Dheepak Krishnamurthy > Who will be the author of this web site? Dheepak Krishnamurthy > What will be the default language of this web site? [en] > Do you want to specify a URL prefix? e.g., http://example.com (Y/n) Y > What is your URL prefix? (see above example; no trailing slash) http://kdheepak.com > Do you want to enable article pagination? (Y/n) Y > How many articles per page do you want? [10] > Do you want to generate a Fabfile/Makefile to automate generation and publishing? (Y/n) Y > Do you want an auto-reload & simpleHTTP script to assist with theme and site development? (Y/n) Y > Do you want to upload your website using FTP? (y/N) N > Do you want to upload your website using SSH? (y/N) N > Do you want to upload your website using Dropbox? (y/N) N > Do you want to upload your website using S3? (y/N) N > Do you want to upload your website using Rackspace Cloud Files? (y/N) N > Do you want to upload your website using GitHub Pages? (y/N) Y > Is this your personal page (username.github.io)? (y/N) Y Done. Your new project is available at /path/to/website ➜ website Content of your blog Create an sample post. vim content/example.md Type in the following and save it. Title : My First Post Date : 2015 - 11 - 23 10 : 20 Category : Example Hello world . Type the following to convert all your markdown or ReST posts to HTML. make html You can also type the following to serve a local version of your site to view the output of your hardwork make serve This will be visible at localhost:8000 by default. Push your content to Github If you installed everything correctly, you can type the following to push your website to your Github repository. You need to have ghp-import installed for this to work. make github You are done! If you have any questions regarding any of this, you can shoot me questions in the comments below.","tags":"blog","title":"How to set up a Pelican blog with Github pages"},{"url":"http://kdheepak.com/blog/mac-osx-productivity-apps.html","text":"1. Alfred http://www.alfredapp.com/ 2. BetterTouchTool http://bettertouchtool.net/BetterTouchTool.zip 3. The Unarchiver https://itunes.apple.com/au/app/the-unarchiver/id425424353?mt=12 4. Geektool http://kdheepak.com/blog/geektool-and-desktop-widgets-in-osx/ http://projects.tynsoe.org/en/geektool/ 5. Retinizer http://retinizer.mikelpr.com/ 6. f.lux https://justgetflux.com/ 7. MacVim https://github.com/macvim-dev/macvim 8. Hazel http://www.noodlesoft.com/hazel.php 9. Flycut https://itunes.apple.com/us/app/flycut-clipboard-manager/id442160987?mt=12 10. ClipMenu http://www.clipmenu.com/ 11. XtraFinder https://www.trankynam.com/xtrafinder/ 12. Disk Inventory X http://www.derlien.com/ 13. Homebrew $( curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install )","tags":"blog","title":"Mac OSX Productivity Apps"},{"url":"http://kdheepak.com/blog/mac-osx-tweaks.html","text":"Update I've decided to maintain a repo here instead. General UI # Disable Dashboard defaults write com.apple.dashboard mcx-disabled -bool true # Don't show Dashboard as a Space defaults write com.apple.dock dashboard-in-overlay -bool true # disable automatic spell checking defaults write -g NSAllowContinuousSpellChecking -bool false # don't treat period or colon as part of words # en_US_POSIX corresponds to the \"United States (Computer)\" setting that was shown in System Preferences in 10.8 and earlier defaults write -g AppleTextBreakLocale en_US_POSIX # Disable the sound effects on boot sudo nvram SystemAudioVolume=\" \" Disks # Disks: disable Time Machine prompts defaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool true # Disks: disable local Time Machine backups hash tmutil &> /dev/null && sudo tmutil disablelocal # Disks: disable disk image verification # defaults write com.apple.frameworks.diskimages skip-verify -bool true # defaults write com.apple.frameworks.diskimages skip-verify-locked -bool true # defaults write com.apple.frameworks.diskimages skip-verify-remote -bool true # don't save .DS_Store files on network volumes defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true # Expand save panel by default defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true # Don't automatically rearrange Spaces based on most recent use defaults write com.apple.dock mru-spaces -bool false Keyboard # Set a blazingly fast keyboard repeat rate defaults write NSGlobalDomain KeyRepeat -int 0 Finder # Disable automatic termination of inactive apps defaults write NSGlobalDomain NSDisableAutomaticTermination -bool true # Finder: disable window animations and Get Info animations defaults write com.apple.finder DisableAllAnimations -bool true # Finder: show all filename extensions defaults write NSGlobalDomain AppleShowAllExtensions -bool true # Disable the warning when changing a file extension defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false # Save to disk (not to iCloud) by default defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false # Finder: disable window and Get Info animations defaults write com.apple.finder DisableAllAnimations -bool true # Finder: show the ~/Library folder (in OS X Lion) chflags nohidden ~/Library # Finder: empty Trash securely by default defaults write com.apple.finder EmptyTrashSecurely -bool true Dock & hot corners # Autohide the Dock defaults write com.apple.dock autohide -bool true # Magnify Dock icons on hover defaults write com.apple.dock magnification -bool false Panels # Panels: expand save panel by default defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true # Panels: expand print panel by default defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true # Panels: disable the \"Are you sure you want to open this application?\" dialog defaults write com.apple.LaunchServices LSQuarantine -bool false # Panels: enable full keyboard access for all controls (e.g. enable Tab in modal dialogs) defaults write NSGlobalDomain AppleKeyboardUIMode -int 3 Screen # Screen: save screenshots to the desktop defaults write com.apple.screencapture location -string \" $ HOME /Desktop\" # Screen: disable shadow in screenshots defaults write com.apple.screencapture disable-shadow -bool true Misc # Misc: only use UTF-8 in Terminal.app defaults write com.apple.terminal StringEncodings -array 4 # Misc: disable Dictionary results defaults write com.apple.spotlight DictionaryLookupEnabled -bool false # Misc: disable auto-correct defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false","tags":"blog","title":"Mac OSX Tweaks"},{"url":"http://kdheepak.com/blog/geektool-and-desktop-widgets-in-osx.html","text":"This is a Geektool tutorial on how to customize your Mac OSX desktop homescreen. Using Geektool you can add a widget like functionality to your desktop. All you need to do is download the following script from here and place it in any folder. Then add a Geektool script and link it to the bash script you've downloaded. I've also used a Calvin and Hobbes / Bill Watterson font to display the day, time and weather using the following codes. Day date '+%A' | tr [:lower:] [:upper:] Time date '+%I: %M %p' Weather curl --silent \"http://xml.weather.yahoo.com/forecastrss?p=50014&u=f\" | grep -E '(Current Conditions:|F<BR)' | sed -e 's/Current Conditions://' -e 's/ //' -e 's/<b>//' -e 's/<\\/b>//' -e 's/ //' -e 's///' -e 's/<\\/description>//' You can also display your battery level, uptime, network connectivity status. There are also loads of preset Geeklets that you can download to get yourself a good looking homescreen. Sky is the limit!","tags":"blog","title":"Geektool and Desktop Widgets in OSX"},{"url":"http://kdheepak.com/blog/robotics.html","text":"Robotics and Microcontroller Projects","tags":"blog","title":"Robotics"},{"url":"http://kdheepak.com/blog/tasker-and-google-maps.html","text":"Android Projects I've shared this on UnleashThePhones a while back as well. This is a small tutorial on how to use Python with SL4A. When Google Now first came out, it would tell you which bus you could take at what time to get to your meeting or event on time based on the location and time information available in Google Calendar. It's every student's dream, especially in countries like the United States or Singapore, where transit navigation is very accurate. I loved the idea, but I wanted it to be ever so slightly better. For example, I wanted my phone to inform me well in advance at what time I should consider leaving home to get to the bus on time. I also wanted information on earlier and later buses, so I could have knowledge of my options, very similar to the way it shows in Google Directions. Enter Tasker. I have a profile set up, which responds to a Google Calendar event reminder. (Tasker requires accessibility access for this by the way.) All my events in Google Calendar have a reminder set to pop up one hour before the event. This triggers a python script that pulls the next event details from Google Calendar, strips and parses the necessary information. Using my current location, the directions to the location is fetched and parsed again for transit details. Tasker then displays this as a notification. This is very similar to a thread found on XDA-Dev. The idea is based on the thread, but in the thread brandall decided to do everything in Tasker. While this is completely doable it made it a little complicated to debug. Also, the profiles attached in his thread require the calendar event to have the name ‘Meeting' and also require a description to be entered. Again, not something you cannot do, but you will have to invest a significant amount of time in case you want to make any significant change. If you would like to setup something similar follow the steps below. 1) Install Tasker, SL4A and the Python intepreter. 2) Paste the python script from the link here in the SL4A folder. This script has to be modified depending on what you want done. To use information from your Google Calendar, you need to add your private Google Calendar link to the script. I've written this to pull Transit details from a xml data, but you can theoretically do anything. 3) Setup a tasker profile similar to what I have below. 4) The Task that will be performed when this context is triggered is setup as below. 5) The above task turns on GPS, finds your current location using GPS and NET, stores the location data in a file and runs the python script. The python script uses the location data written into the file along with your next calendar event information to find out transit details. This then calls the show route task. 6) The show route is attached below. 7) All you need to do now is create an event on your Calendar with location information and you are good to go! Here are some screenshots of what it looks like after you are done. I've attached the xml from Tasker here so that it can be imported. Show Route and GetCalData. I've used Autonotification, a tasker plugin by joaomgcd to display the notification. You will need to use this if you want a button in the notification. This entire setup is currently in a primitive stage, I haven't added any error handling or additional functionality but I intend to. I will update this post when I do that. BeautifulSoup is supported by SL4A in python, which can make it extremely easy to parse information. I haven't used it in my script though, since mine was a very small program. But it is nice to know that is an option. Big shoutout to PocketTables for offering a world of useful information on Tasker. I found their posts to be extremely helpful. Tasker is an amazing application and is extremely powerful. It can allow for a world of customization. If you have any questions about this setup please do let me know.","tags":"blog","title":"Tasker and Google Maps"},{"url":"http://kdheepak.com/blog/tasker-projects.html","text":"Google Calendar This page contains information about the profile that uses Tasker to get contextual information from Google Calendar and react based on it. Tell me a Joke This profile reads a random joke from here WhatsApp Client This profile interacts with WhatsApp and allows you to send messages using your desktop","tags":"blog","title":"Tasker Projects"},{"url":"http://kdheepak.com/blog/home-monitoring-system.html","text":"Example Monitoring temperature using Raspberry Pi The current ambient room temperature is: 75.76 °F Created with Highcharts 4.0.1 Chart context menu Temperature (°F) Temperature TemperatureF 0 1000 250 500 750 1250 72 74 76 78 70 80 Highcharts.com Created with Highcharts 4.0.1 Chart context menu Temperature (°F) Temperature TemperatureF LocalTemperatureF 0 1000 250 500 750 1250 0 100 -25 25 50 75 Highcharts.com Last updated: 2014-02-06 19:55:23 $(function () { $('#containerF').highcharts({ title: { text: 'Temperature', x: -20 //center }, subtitle: { }, xAxis: { }, yAxis: { title: { text: 'Temperature (°F)' }, plotLines: [{ value: 0, width: 1, color: '#808080' }] }, tooltip: { valueSuffix: '°F' }, legend: { layout: 'vertical', align: 'right', verticalAlign: 'middle', borderWidth: 0 }, series: [{ name: 'TemperatureF', data: [75.76,75.99,75.76,75.54,75.54,75.65,75.88,76.33,76.10,75.99,76.21,75.65,75.54,75.20,75.09,74.53,74.41,74.19,73.29,73.18,72.50,72.72,72.84,73.06,74.08,74.08,73.40,73.62,72.72,73.18,73.74,74.08,73.96,73.74,73.96,73.96,75.31,75.31,75.20,75.09,74.86,74.41,74.86,75.09,74.97,74.86,74.75,74.53,74.53,74.53,74.41,74.41,74.08,74.08,73.85,73.74,73.62,73.29,73.40,73.40,73.29,73.40,73.51,73.62,73.51,73.74,73.85,73.74,73.74,73.74,73.74,73.62,73.74,73.85,73.74,73.74,73.85,73.85,73.62,73.74,73.96,73.85,73.96,73.85,73.85,74.08,73.96,74.08,73.96,74.08,74.08,74.08,73.96,74.08,73.96,73.85,73.85,73.85,74.08,73.96,73.96,73.96,73.96,73.96,73.96,74.08,73.96,74.08,74.30,74.08,74.19,74.19,74.30,74.41,74.30,74.41,74.30,74.30,74.41,74.41,74.53,74.41,74.64,74.53,74.64,74.53,74.64,74.75,74.75,74.64,74.53,74.75,74.53,74.75,74.75,74.86,74.75,74.86,75.09,75.09,75.20,75.20,75.20,75.31,75.31,75.20,75.20,75.20,75.09,75.20,75.20,75.31,75.31,75.31,75.31,75.31,74.08,74.08,73.85,74.08,74.19,74.08,74.19,74.30,74.08,73.85,74.08,73.96,74.08,73.85,73.85,74.30,73.85,73.85,74.41,74.19,74.08,74.30,74.08,73.85,73.96,73.85,73.62,73.85,74.53,74.19,73.85,73.62,73.74,73.96,74.19,73.96,74.30,73.96,73.74,74.08,73.85,73.85,73.85,73.96,73.74,73.62,74.08,73.62,74.08,73.85,73.96,73.96,73.62,74.08,73.74,73.62,73.62,73.74,73.96,74.08,74.08,74.19,74.08,73.74,73.62,73.96,74.08,73.96,73.96,73.96,74.19,74.08,74.19,73.74,74.19,74.08,73.62,73.85,73.96,74.08,73.74,73.96,73.51,73.96,74.30,74.08,73.85,74.19,74.08,74.08,73.85,73.74,74.30,73.85,73.85,73.85,74.08,73.62,74.08,74.19,74.19,73.74,73.74,74.19,73.85,74.08,74.08,73.85,73.96,74.08,73.96,74.08,74.19,74.30,74.19,74.19,73.96,74.30,74.30,74.08,73.96,73.96,74.64,74.30,73.96,74.41,74.08,74.30,74.53,74.19,73.96,73.96,74.30,74.08,74.19,74.19,73.85,74.08,74.08,74.19,73.74,74.08,74.08,74.08,73.96,74.19,74.08,73.96,73.85,73.85,73.62,73.85,73.51,73.96,73.96,73.74,73.85,73.85,74.08,73.96,73.62,74.19,73.85,73.85,73.74,74.08,74.08,73.96,72.72,73.18,72.72,72.39,72.95,73.29,74.19,74.97,75.31,76.33,76.44,77.00,77.11,77.00,77.00,76.66,76.55,76.33,76.33,76.44,76.44,76.66,76.55,76.66,76.55,76.10,75.20,73.74,73.85,74.53,73.85,74.19,74.08,74.30,73.96,73.85,74.08,74.08,73.96,73.96,74.30,73.96,74.30,74.41,74.30,75.31,75.31,75.31,75.31,75.31,75.31,75.31,75.31,75.31,75.31,75.31,75.20,75.09,75.20,75.09,74.97,75.09,75.09,75.09,75.09,75.20,74.97,74.97,74.75,74.64,74.75,74.86,74.75,74.86,74.53,74.75,74.86,74.64,74.64,74.75,74.75,74.75,74.64,74.64,74.53,74.75,74.53,74.64,74.53,74.53,74.53,74.53,74.41,74.53,74.53,74.53,74.64,74.64,74.53,74.53,74.53,74.41,74.41,74.30,74.30,74.19,74.08,74.19,74.08,74.08,74.19,74.19,74.19,74.08,74.08,74.08,73.96,73.96,73.96,73.85,73.96,73.62,73.62,73.51,73.62,73.51,73.40,73.40,73.40,73.51,73.40,73.51,73.29,73.06,73.06,73.29,72.95,72.95,72.95,72.95,72.84,72.61,72.72,72.61,72.50,72.39,72.16,72.16,72.05,71.71,71.60,71.60,71.71,71.60,71.60,71.49,71.49,71.60,71.49,71.49,71.60,71.60,71.60,71.71,71.71,71.60,71.49,71.49,71.60,71.49,71.60,71.49,71.60,71.49,71.49,71.71,71.60,71.38,71.38,71.71,71.60,71.49,71.60,71.71,71.71,71.71,71.60,71.71,71.60,71.60,71.60,71.60,71.49,71.60,71.71,71.60,71.60,71.71,71.60,71.83,71.60,71.60,71.83,71.83,71.94,71.94,71.94,71.94,71.94,72.05,72.05,72.05,72.16,72.16,72.16,72.16,72.16,71.94,72.16,72.16,72.16,72.05,72.28,72.28,72.39,72.28,72.16,72.28,72.28,72.16,72.39,72.16,72.39,72.28,72.16,72.28,72.16,72.28,72.05,72.39,72.50,72.39,72.39,72.50,72.39,72.72,72.72,72.61,72.39,72.61,72.50,72.61,72.50,72.72,72.50,72.61,72.61,72.72,72.72,72.50,72.50,72.61,72.61,72.61,72.61,72.61,72.61,72.72,72.61,72.72,72.72,72.61,72.61,72.61,72.61,72.50,72.61,72.61,72.50,72.61,72.61,72.72,72.61,72.61,72.61,72.61,72.72,72.61,72.72,72.72,72.72,72.95,72.61,72.95,72.84,72.95,72.95,72.95,72.84,72.95,72.84,73.06,72.95,73.18,73.18,73.18,73.06,73.18,73.18,73.06,73.06,73.29,73.18,73.29,73.40,73.40,73.40,73.40,73.51,73.40,73.40,73.51,73.40,73.51,73.62,73.40,73.62,73.62,73.62,73.62,73.74,73.74,73.62,73.74,73.62,73.74,73.85,73.85,73.96,73.96,73.85,73.96,73.96,73.96,74.08,74.08,73.96,74.08,73.96,74.08,74.19,74.08,74.08,74.19,74.30,74.41,74.30,74.41,74.41,74.41,74.53,74.30,74.53,74.41,74.53,74.64,74.64,74.53,74.53,74.53,74.75,74.64,74.86,74.64,74.75,74.64,74.75,74.86,74.75,74.75,74.86,74.97,74.86,75.09,75.20,75.09,75.20,75.20,75.20,75.31,75.31,75.31,75.31,73.85,74.08,74.08,73.85,74.30,74.08,74.19,74.19,74.30,73.85,73.85,73.85,73.29,73.18,72.84,72.61,72.95,72.84,72.61,73.29,73.96,74.08,74.41,74.75,74.53,74.64,74.53,74.64,75.20,74.97,75.09,75.43,75.43,75.31,75.54,75.76,75.99,75.99,75.99,76.21,75.99,76.44,76.33,76.55,76.44,76.66,76.78,76.89,76.89,77.00,77.00,77.00,76.89,76.66,76.78,76.78,76.66,77.00,77.11,77.11,77.34,77.34,77.34,77.11,77.22,77.00,77.00,77.11,77.11,77.11,77.22,77.11,77.22,77.45,77.34,77.22,77.34,77.22,77.22,77.34,77.34,77.45,77.68,77.45,77.68,77.56,77.45,77.22,77.22,77.34,77.56,77.56,77.68,77.56,77.56,77.56,77.56,77.56,77.56,77.56,77.68,77.56,77.79,77.79,77.79,77.79,77.68,77.56,77.68,77.90,78.01,78.01,77.90,77.79,77.90,77.90,77.68,77.68,77.90,77.90,77.68,77.90,78.01,78.01,77.90,78.01,78.01,77.90,78.01,77.90,78.01,78.01,78.01,78.01,77.90,77.79,77.79,77.90,78.01,78.01,78.12,78.12,78.01,78.12,78.24,78.01,77.79,77.79,78.01,78.24,78.24,78.35,78.24,78.24,78.01,78.01,77.90,78.01,78.01,78.24,78.35,78.35,78.35,78.24,78.24,78.12,78.12,77.90,77.79,77.79,78.01,78.12,78.35,78.46,78.46,78.24,78.12,78.12,78.01,78.12,77.90,77.79,78.01,77.68,78.01,77.90,78.01,78.01,78.12,78.01,77.90,78.01,77.79,77.90,78.12,77.90,77.68,77.45,77.56,77.68,77.45,77.68,77.45,77.68,77.45,77.68,77.56,77.68,77.68,77.45,77.45,77.45,77.56,77.45,77.34,77.22,77.34,77.22,76.89,76.89,77.11,77.00,76.89,76.89,76.89,77.00,77.11,77.00,76.66,76.66,76.78,76.66,76.78,76.66,76.55,76.33,76.33,76.10,76.10,76.21,75.99,76.21,75.76,75.43,75.54,75.43,75.31,75.31,75.31,75.20,74.75,74.97,74.53,74.64,74.08,73.18,72.95,72.84,72.95,72.84,73.62,73.96,74.19,74.30,74.08,74.08,74.08,75.31,75.31,75.31,75.09,75.09,74.86,74.86,74.75,74.64,74.64,74.53,74.64,74.53,74.53,74.41,74.19,74.30,74.30,74.08,73.96,73.96,73.96,73.85,73.74,73.74,73.62,73.62,73.40,73.40,73.18,73.06,73.06,72.95,72.95,72.72,72.61,72.39,72.28,72.05,71.71,71.71,71.71,71.60,71.60,71.49,71.71,71.71,71.60,71.60,71.83,71.60,71.60,71.49,71.71,71.71,71.71,71.83,71.71,71.94,71.83,71.83,71.94,71.83,71.83,71.83,71.94,71.94,71.71,72.05,72.05,72.05,72.05,72.16,72.16,72.16,72.16,72.28,72.28,72.28,72.61,72.61,72.72,72.72,72.84,72.84,72.95,72.95,72.84,72.95,72.95,72.95,72.84,72.84,72.95,73.06,72.95,73.06,72.95,73.06,72.84,72.95,72.72,72.84,72.61,72.72,72.61,72.61,72.61,72.28,72.28,72.16,72.28,72.39,72.16,72.50,72.50,72.28,72.28,72.39,72.50,72.39,72.28,72.39,72.39,72.50,72.39,72.28,72.50,72.50,72.39,72.50,72.61,72.50,72.61,72.50,72.50,72.50,72.72,72.72,72.84,72.61,72.61,72.72,72.61,72.61,72.72,72.72,72.61,72.50,72.39,72.61,72.61,72.50,72.61,72.72,72.84,72.84,72.61,72.95,72.95,72.84,72.95,72.95,73.06,72.95,72.72,72.84,72.95,73.06,72.95,72.95,72.84,73.06,73.06,73.18,73.29,73.18,73.29,73.74,73.62,73.85,74.19,74.30,74.19,74.08,74.19,74.08,74.19,74.19,74.08,74.19,74.19,74.08,74.08,74.19,74.08,73.85,73.85,73.74,73.51,73.51,73.51,73.62,73.62,73.51,73.62,73.18,73.29,73.06,73.29,73.40,73.29,73.40,73.29,73.51,73.29,73.40,73.40,73.29,73.40,73.40,73.40,73.18,73.40,73.40,73.51,73.40,73.51,73.51,73.62,73.62,73.40,73.40,73.40,73.40,73.29,73.29,73.40,73.40,73.51,73.51,73.51,73.62,73.62,73.62,73.62,73.51,73.29,73.40,73.29,73.51,73.40,73.51,73.62,73.51,73.51,73.62,73.62,73.40,73.29,73.29,73.51,73.29,73.62,73.62,73.51,73.62,73.51,73.62,73.62,73.29,73.40,73.29,73.51,73.29,73.51,73.51,73.51,73.62,73.62,73.51,73.51,73.74,73.40,73.51,73.40,73.51,73.51,73.51,73.62,73.51,73.62,73.62,73.51,73.62,73.62,73.40,73.62,73.62,73.62,73.62,73.62,73.62,73.62,73.62,73.85,73.62,73.51,73.85,73.74,73.74,73.74,73.74,73.85,73.85,73.74,73.85,73.62,73.85,73.74,73.74,73.74,73.74,73.85,73.96,73.85,73.85,73.96,73.96,73.74,74.08,73.96,74.08,74.08,74.08,74.08,74.08,74.19,74.19,74.19,74.30,74.30,74.30,74.19,74.41,74.19,74.41,74.41,74.53,74.53,74.30,74.53,74.64,74.53,74.64,74.64,74.64,74.53,74.53,74.75,74.75,74.86,74.97,75.09,75.09,75.20,75.31,75.31,75.31,75.20,75.20,75.31,75.31,75.31,73.96,73.96,73.74,72.72,73.29,74.41,75.43,76.21,76.44,76.21,75.43,74.75,74.19,73.51,73.74,73.62,74.08,73.85,73.74,73.96,73.85,73.06,72.72,73.29,74.64,74.64,74.64,74.75,74.30,74.64,74.19,73.18,73.06,73.62,73.96,74.64,74.97,74.41,74.64,74.53,73.62,72.39,73.51,73.18,73.85,74.08,74.30,74.97,74.75,74.97,74.41,74.19,73.29,73.40,73.62,73.96,74.75,74.19,75.31,74.97,74.53,74.41,74.30,74.53,74.30,74.41,74.64,74.75,75.09,75.31,75.31,75.09,74.41,74.19,74.19,74.75,74.75,75.09,75.31,75.31,75.20,75.09] }] }); }); $(function () { $('#containerComp').highcharts({ title: { text: 'Temperature', x: -20 //center }, subtitle: { }, xAxis: { }, yAxis: { title: { text: 'Temperature (°F)' }, plotLines: [{ value: 0, width: 1, color: '#808080' }] }, tooltip: { valueSuffix: '°F' }, legend: { layout: 'vertical', align: 'right', verticalAlign: 'middle', borderWidth: 0 }, series: [{ name: 'TemperatureF', data: [75.76,75.99,75.76,75.54,75.54,75.65,75.88,76.33,76.10,75.99,76.21,75.65,75.54,75.20,75.09,74.53,74.41,74.19,73.29,73.18,72.50,72.72,72.84,73.06,74.08,74.08,73.40,73.62,72.72,73.18,73.74,74.08,73.96,73.74,73.96,73.96,75.31,75.31,75.20,75.09,74.86,74.41,74.86,75.09,74.97,74.86,74.75,74.53,74.53,74.53,74.41,74.41,74.08,74.08,73.85,73.74,73.62,73.29,73.40,73.40,73.29,73.40,73.51,73.62,73.51,73.74,73.85,73.74,73.74,73.74,73.74,73.62,73.74,73.85,73.74,73.74,73.85,73.85,73.62,73.74,73.96,73.85,73.96,73.85,73.85,74.08,73.96,74.08,73.96,74.08,74.08,74.08,73.96,74.08,73.96,73.85,73.85,73.85,74.08,73.96,73.96,73.96,73.96,73.96,73.96,74.08,73.96,74.08,74.30,74.08,74.19,74.19,74.30,74.41,74.30,74.41,74.30,74.30,74.41,74.41,74.53,74.41,74.64,74.53,74.64,74.53,74.64,74.75,74.75,74.64,74.53,74.75,74.53,74.75,74.75,74.86,74.75,74.86,75.09,75.09,75.20,75.20,75.20,75.31,75.31,75.20,75.20,75.20,75.09,75.20,75.20,75.31,75.31,75.31,75.31,75.31,74.08,74.08,73.85,74.08,74.19,74.08,74.19,74.30,74.08,73.85,74.08,73.96,74.08,73.85,73.85,74.30,73.85,73.85,74.41,74.19,74.08,74.30,74.08,73.85,73.96,73.85,73.62,73.85,74.53,74.19,73.85,73.62,73.74,73.96,74.19,73.96,74.30,73.96,73.74,74.08,73.85,73.85,73.85,73.96,73.74,73.62,74.08,73.62,74.08,73.85,73.96,73.96,73.62,74.08,73.74,73.62,73.62,73.74,73.96,74.08,74.08,74.19,74.08,73.74,73.62,73.96,74.08,73.96,73.96,73.96,74.19,74.08,74.19,73.74,74.19,74.08,73.62,73.85,73.96,74.08,73.74,73.96,73.51,73.96,74.30,74.08,73.85,74.19,74.08,74.08,73.85,73.74,74.30,73.85,73.85,73.85,74.08,73.62,74.08,74.19,74.19,73.74,73.74,74.19,73.85,74.08,74.08,73.85,73.96,74.08,73.96,74.08,74.19,74.30,74.19,74.19,73.96,74.30,74.30,74.08,73.96,73.96,74.64,74.30,73.96,74.41,74.08,74.30,74.53,74.19,73.96,73.96,74.30,74.08,74.19,74.19,73.85,74.08,74.08,74.19,73.74,74.08,74.08,74.08,73.96,74.19,74.08,73.96,73.85,73.85,73.62,73.85,73.51,73.96,73.96,73.74,73.85,73.85,74.08,73.96,73.62,74.19,73.85,73.85,73.74,74.08,74.08,73.96,72.72,73.18,72.72,72.39,72.95,73.29,74.19,74.97,75.31,76.33,76.44,77.00,77.11,77.00,77.00,76.66,76.55,76.33,76.33,76.44,76.44,76.66,76.55,76.66,76.55,76.10,75.20,73.74,73.85,74.53,73.85,74.19,74.08,74.30,73.96,73.85,74.08,74.08,73.96,73.96,74.30,73.96,74.30,74.41,74.30,75.31,75.31,75.31,75.31,75.31,75.31,75.31,75.31,75.31,75.31,75.31,75.20,75.09,75.20,75.09,74.97,75.09,75.09,75.09,75.09,75.20,74.97,74.97,74.75,74.64,74.75,74.86,74.75,74.86,74.53,74.75,74.86,74.64,74.64,74.75,74.75,74.75,74.64,74.64,74.53,74.75,74.53,74.64,74.53,74.53,74.53,74.53,74.41,74.53,74.53,74.53,74.64,74.64,74.53,74.53,74.53,74.41,74.41,74.30,74.30,74.19,74.08,74.19,74.08,74.08,74.19,74.19,74.19,74.08,74.08,74.08,73.96,73.96,73.96,73.85,73.96,73.62,73.62,73.51,73.62,73.51,73.40,73.40,73.40,73.51,73.40,73.51,73.29,73.06,73.06,73.29,72.95,72.95,72.95,72.95,72.84,72.61,72.72,72.61,72.50,72.39,72.16,72.16,72.05,71.71,71.60,71.60,71.71,71.60,71.60,71.49,71.49,71.60,71.49,71.49,71.60,71.60,71.60,71.71,71.71,71.60,71.49,71.49,71.60,71.49,71.60,71.49,71.60,71.49,71.49,71.71,71.60,71.38,71.38,71.71,71.60,71.49,71.60,71.71,71.71,71.71,71.60,71.71,71.60,71.60,71.60,71.60,71.49,71.60,71.71,71.60,71.60,71.71,71.60,71.83,71.60,71.60,71.83,71.83,71.94,71.94,71.94,71.94,71.94,72.05,72.05,72.05,72.16,72.16,72.16,72.16,72.16,71.94,72.16,72.16,72.16,72.05,72.28,72.28,72.39,72.28,72.16,72.28,72.28,72.16,72.39,72.16,72.39,72.28,72.16,72.28,72.16,72.28,72.05,72.39,72.50,72.39,72.39,72.50,72.39,72.72,72.72,72.61,72.39,72.61,72.50,72.61,72.50,72.72,72.50,72.61,72.61,72.72,72.72,72.50,72.50,72.61,72.61,72.61,72.61,72.61,72.61,72.72,72.61,72.72,72.72,72.61,72.61,72.61,72.61,72.50,72.61,72.61,72.50,72.61,72.61,72.72,72.61,72.61,72.61,72.61,72.72,72.61,72.72,72.72,72.72,72.95,72.61,72.95,72.84,72.95,72.95,72.95,72.84,72.95,72.84,73.06,72.95,73.18,73.18,73.18,73.06,73.18,73.18,73.06,73.06,73.29,73.18,73.29,73.40,73.40,73.40,73.40,73.51,73.40,73.40,73.51,73.40,73.51,73.62,73.40,73.62,73.62,73.62,73.62,73.74,73.74,73.62,73.74,73.62,73.74,73.85,73.85,73.96,73.96,73.85,73.96,73.96,73.96,74.08,74.08,73.96,74.08,73.96,74.08,74.19,74.08,74.08,74.19,74.30,74.41,74.30,74.41,74.41,74.41,74.53,74.30,74.53,74.41,74.53,74.64,74.64,74.53,74.53,74.53,74.75,74.64,74.86,74.64,74.75,74.64,74.75,74.86,74.75,74.75,74.86,74.97,74.86,75.09,75.20,75.09,75.20,75.20,75.20,75.31,75.31,75.31,75.31,73.85,74.08,74.08,73.85,74.30,74.08,74.19,74.19,74.30,73.85,73.85,73.85,73.29,73.18,72.84,72.61,72.95,72.84,72.61,73.29,73.96,74.08,74.41,74.75,74.53,74.64,74.53,74.64,75.20,74.97,75.09,75.43,75.43,75.31,75.54,75.76,75.99,75.99,75.99,76.21,75.99,76.44,76.33,76.55,76.44,76.66,76.78,76.89,76.89,77.00,77.00,77.00,76.89,76.66,76.78,76.78,76.66,77.00,77.11,77.11,77.34,77.34,77.34,77.11,77.22,77.00,77.00,77.11,77.11,77.11,77.22,77.11,77.22,77.45,77.34,77.22,77.34,77.22,77.22,77.34,77.34,77.45,77.68,77.45,77.68,77.56,77.45,77.22,77.22,77.34,77.56,77.56,77.68,77.56,77.56,77.56,77.56,77.56,77.56,77.56,77.68,77.56,77.79,77.79,77.79,77.79,77.68,77.56,77.68,77.90,78.01,78.01,77.90,77.79,77.90,77.90,77.68,77.68,77.90,77.90,77.68,77.90,78.01,78.01,77.90,78.01,78.01,77.90,78.01,77.90,78.01,78.01,78.01,78.01,77.90,77.79,77.79,77.90,78.01,78.01,78.12,78.12,78.01,78.12,78.24,78.01,77.79,77.79,78.01,78.24,78.24,78.35,78.24,78.24,78.01,78.01,77.90,78.01,78.01,78.24,78.35,78.35,78.35,78.24,78.24,78.12,78.12,77.90,77.79,77.79,78.01,78.12,78.35,78.46,78.46,78.24,78.12,78.12,78.01,78.12,77.90,77.79,78.01,77.68,78.01,77.90,78.01,78.01,78.12,78.01,77.90,78.01,77.79,77.90,78.12,77.90,77.68,77.45,77.56,77.68,77.45,77.68,77.45,77.68,77.45,77.68,77.56,77.68,77.68,77.45,77.45,77.45,77.56,77.45,77.34,77.22,77.34,77.22,76.89,76.89,77.11,77.00,76.89,76.89,76.89,77.00,77.11,77.00,76.66,76.66,76.78,76.66,76.78,76.66,76.55,76.33,76.33,76.10,76.10,76.21,75.99,76.21,75.76,75.43,75.54,75.43,75.31,75.31,75.31,75.20,74.75,74.97,74.53,74.64,74.08,73.18,72.95,72.84,72.95,72.84,73.62,73.96,74.19,74.30,74.08,74.08,74.08,75.31,75.31,75.31,75.09,75.09,74.86,74.86,74.75,74.64,74.64,74.53,74.64,74.53,74.53,74.41,74.19,74.30,74.30,74.08,73.96,73.96,73.96,73.85,73.74,73.74,73.62,73.62,73.40,73.40,73.18,73.06,73.06,72.95,72.95,72.72,72.61,72.39,72.28,72.05,71.71,71.71,71.71,71.60,71.60,71.49,71.71,71.71,71.60,71.60,71.83,71.60,71.60,71.49,71.71,71.71,71.71,71.83,71.71,71.94,71.83,71.83,71.94,71.83,71.83,71.83,71.94,71.94,71.71,72.05,72.05,72.05,72.05,72.16,72.16,72.16,72.16,72.28,72.28,72.28,72.61,72.61,72.72,72.72,72.84,72.84,72.95,72.95,72.84,72.95,72.95,72.95,72.84,72.84,72.95,73.06,72.95,73.06,72.95,73.06,72.84,72.95,72.72,72.84,72.61,72.72,72.61,72.61,72.61,72.28,72.28,72.16,72.28,72.39,72.16,72.50,72.50,72.28,72.28,72.39,72.50,72.39,72.28,72.39,72.39,72.50,72.39,72.28,72.50,72.50,72.39,72.50,72.61,72.50,72.61,72.50,72.50,72.50,72.72,72.72,72.84,72.61,72.61,72.72,72.61,72.61,72.72,72.72,72.61,72.50,72.39,72.61,72.61,72.50,72.61,72.72,72.84,72.84,72.61,72.95,72.95,72.84,72.95,72.95,73.06,72.95,72.72,72.84,72.95,73.06,72.95,72.95,72.84,73.06,73.06,73.18,73.29,73.18,73.29,73.74,73.62,73.85,74.19,74.30,74.19,74.08,74.19,74.08,74.19,74.19,74.08,74.19,74.19,74.08,74.08,74.19,74.08,73.85,73.85,73.74,73.51,73.51,73.51,73.62,73.62,73.51,73.62,73.18,73.29,73.06,73.29,73.40,73.29,73.40,73.29,73.51,73.29,73.40,73.40,73.29,73.40,73.40,73.40,73.18,73.40,73.40,73.51,73.40,73.51,73.51,73.62,73.62,73.40,73.40,73.40,73.40,73.29,73.29,73.40,73.40,73.51,73.51,73.51,73.62,73.62,73.62,73.62,73.51,73.29,73.40,73.29,73.51,73.40,73.51,73.62,73.51,73.51,73.62,73.62,73.40,73.29,73.29,73.51,73.29,73.62,73.62,73.51,73.62,73.51,73.62,73.62,73.29,73.40,73.29,73.51,73.29,73.51,73.51,73.51,73.62,73.62,73.51,73.51,73.74,73.40,73.51,73.40,73.51,73.51,73.51,73.62,73.51,73.62,73.62,73.51,73.62,73.62,73.40,73.62,73.62,73.62,73.62,73.62,73.62,73.62,73.62,73.85,73.62,73.51,73.85,73.74,73.74,73.74,73.74,73.85,73.85,73.74,73.85,73.62,73.85,73.74,73.74,73.74,73.74,73.85,73.96,73.85,73.85,73.96,73.96,73.74,74.08,73.96,74.08,74.08,74.08,74.08,74.08,74.19,74.19,74.19,74.30,74.30,74.30,74.19,74.41,74.19,74.41,74.41,74.53,74.53,74.30,74.53,74.64,74.53,74.64,74.64,74.64,74.53,74.53,74.75,74.75,74.86,74.97,75.09,75.09,75.20,75.31,75.31,75.31,75.20,75.20,75.31,75.31,75.31,73.96,73.96,73.74,72.72,73.29,74.41,75.43,76.21,76.44,76.21,75.43,74.75,74.19,73.51,73.74,73.62,74.08,73.85,73.74,73.96,73.85,73.06,72.72,73.29,74.64,74.64,74.64,74.75,74.30,74.64,74.19,73.18,73.06,73.62,73.96,74.64,74.97,74.41,74.64,74.53,73.62,72.39,73.51,73.18,73.85,74.08,74.30,74.97,74.75,74.97,74.41,74.19,73.29,73.40,73.62,73.96,74.75,74.19,75.31,74.97,74.53,74.41,74.30,74.53,74.30,74.41,74.64,74.75,75.09,75.31,75.31,75.09,74.41,74.19,74.19,74.75,74.75,75.09,75.31,75.31,75.20,75.09] },{ name: 'LocalTemperatureF', data: [6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4,0,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-7,-4,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-9,-9,-9,-10,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-5,-8,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-2,-4,-4,-4,-4,-4,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5] },]});});","tags":"blog","title":"Home monitoring system"}]}